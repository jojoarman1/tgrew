from aiogram import types
from aiogram.dispatcher import FSMContext
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from app import dp, bot
from database import GiveAway, GiveAwayStatistic
from utils import Captcha

captcha = Captcha()

async def manage_new_members_from_button_gives(
    jam: types.Message,
    give_callback_value: str,
    state: FSMContext
):

    if not await GiveAwayStatistic().exists_member(
        giveaway_callback_value=give_callback_value,
        member_username=jam.from_user.username
    ):

        give_data = await GiveAway().filter(callback_value=give_callback_value).all().values(
            'over_date',
            'captcha'
        )

        for give in give_data:

            if give['captcha']:
                await state.update_data(give_callback_value=give_callback_value)

                captcha.register_handlers(dp)
                await bot.send_message(
                    jam.from_user.id,
                    captcha.get_caption(),
                    reply_markup=captcha.get_captcha_keyboard()
                )

            else:
                # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
                keyboard = InlineKeyboardMarkup()
                menu_button = InlineKeyboardButton("–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", callback_data="/start")
                keyboard.add(menu_button)

                await jam.answer(
                    "–¢—ã - —Å—É–ø–µ—Ä–≥–µ—Ä–æ–π! üí™üèª\n"
                    "–¢—ã —Ç–æ–ª—å–∫–æ —á—Ç–æ —Å—Ç–∞–ª —á–∞—Å—Ç—å—é ‚Äú–ú–´ –° –¢–û–ë–û–ô‚Äù! üî•\n"
                    "–°–ø–∞—Å–∏–±–æ –∑–∞ –¥–æ–≤–µ—Ä–∏–µ! üéâ –¢–µ–ø–µ—Ä—å —Ç—ã —É—á–∞—Å—Ç–≤—É–µ—à—å –≤ —Ä–æ–∑—ã–≥—Ä—ã—à–µ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–≥–æ –ø—Ä–∏–∑–∞!\n\n"
                    "–ß–µ–º –±–æ–ª—å—à–µ –¥—Ä—É–∑–µ–π —Ç—ã –ø—Ä–∏–≥–ª–∞—Å–∏—à—å, —Ç–µ–º –±–æ–ª—å—à–µ —à–∞–Ω—Å–æ–≤ –Ω–∞ —Å—É–ø–µ—Ä-–±–ª–∞–≥–æ–¥–∞—Ä–Ω–æ—Å—Ç—å –æ—Ç –Ω–∞—Å! ü§ùüèª\n\n"
                    "–í—Å—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–æ–∑—ã–≥—Ä—ã—à–∞—Ö –∏ —Ç–æ–º, –∫–∞–∫ –º—ã –ø–æ–º–æ–≥–∞–µ–º –ª—é–¥—è–º —Ç—ã –Ω–∞–π–¥–µ—à—å –∑–¥–µ—Å—å: [—Å—Å—ã–ª–∫–∞ –Ω–∞ –∫–∞–Ω–∞–ª]\n\n"
                    "–û–±—ä–µ–¥–∏–Ω–∏–≤—à–∏—Å—å, –º—ã —Ç–≤–æ—Ä–∏–º —á—É–¥–µ—Å–∞ üí´ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –º—ã –¥–∞–µ–º —à–∞–Ω—Å –Ω–∞ –ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—É—é –∂–∏–∑–Ω—å –Ω—É–∂–¥–∞—é—â–∏–º—Å—è, –∞ –≤—ã –º–æ–∂–µ—Ç–µ —Å—Ç–∞—Ç—å –±–æ–≥–∞—á–µ –∏ —Å—á–∞—Å—Ç–ª–∏–≤–µ–µ!\n\n"
                    "–ß–µ–º –±–æ–ª—å—à–µ –ª—é–¥–µ–π —É—á–∞—Å—Ç–≤—É–µ—Ç, —Ç–µ–º –±–æ–ª—å—à–µ –ø—Ä–∏–∑! ü•≥ 1 000 000 –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –±–æ—Ç–∞ - –∏ –º—ã —Ä–∞–∑—ã–≥—Ä–∞–µ–º 1 000 000 —Ä—É–±–ª–µ–π! üí∞",
                    reply_markup=keyboard  # –û—Ç–ø—Ä–∞–≤–∫–∞ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π
                )

                await GiveAwayStatistic().update_statistic_members(
                    giveaway_callback_value=give_callback_value,
                    new_member_username=jam.from_user.username,
                    new_member_id=jam.from_user.id
                )

    else:
        await jam.answer(
            '<b>–í—ã —É–∂–µ —É—á–∞—Å—Ç–≤—É–µ—Ç–µ! –û–∂–∏–¥–∞–π—Ç–µ –∏—Ç–æ–≥–æ–≤!</b>'
        )
