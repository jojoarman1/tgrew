from aiogram import types
from aiogram.dispatcher import FSMContext

from app import dp
from database import GiveAway
from states import CreatedGivesStates
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
bt_admin_start_give = InlineKeyboardButton('–ó–∞–ø—É—Å—Ç–∏—Ç—å', callback_data='admin_start_give')
bt_admin_delete_give = InlineKeyboardButton('–£–¥–∞–ª–∏—Ç—å', callback_data='admin_delete_give')
bt_admin_manage_channels = InlineKeyboardButton('–ö–∞–Ω–∞–ª—ã', callback_data='admin_manage_channels')
bt_admin_change_over_date = InlineKeyboardButton('–ò–∑–º–µ–Ω–∏—Ç—å –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è', callback_data='admin_change_over_date')
bt_admin_cancel_action = InlineKeyboardButton('¬´ –ù–∞–∑–∞–¥', callback_data='admin_cancel_action')
kb_admin_cancel_action = InlineKeyboardMarkup().add(bt_admin_cancel_action)
bt_admin_create_give = InlineKeyboardButton('–°–æ–∑–¥–∞—Ç—å —Ä–æ–∑—ã–≥—Ä—ã—à', callback_data='admin_gives')
bt_admin_created_gives = InlineKeyboardButton('–°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏', callback_data='admin_created_gives')
bt_admin_started_gives = InlineKeyboardButton('–ê–∫—Ç–∏–≤–Ω—ã–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∏', callback_data='admin_started_gives')
kb_back = InlineKeyboardMarkup().add(bt_admin_cancel_action)
kb_admin_menu = InlineKeyboardMarkup().add(bt_admin_create_give, bt_admin_created_gives).add(bt_admin_started_gives)
kb_admin_manage_created_gives = InlineKeyboardMarkup().add(bt_admin_start_give, bt_admin_delete_give).add(bt_admin_manage_channels).add(bt_admin_change_over_date).add(
    bt_admin_cancel_action
)

@dp.callback_query_handler(
    text=bt_admin_created_gives.callback_data,
    state='*'
)
async def show_created_gives(jam: types.CallbackQuery):
    markup = await GiveAway().get_keyboard_of_created_gives(
        user_id=jam.from_user.id
    )

    if markup:
        markup.add(bt_admin_cancel_action)

        await jam.message.edit_text(
            'üíé  <b>–í—ã–±–µ—Ä–∏—Ç–µ —Ä–æ–∑—ã–≥—Ä—ã—à –¥–ª—è –ø—Ä–æ—Å–º–æ—Ç—Ä–∞:</b> ',
            reply_markup=markup
        )
        await CreatedGivesStates.select_give.set()

    else:
        await jam.answer('–£ –≤–∞—Å –Ω–µ—Ç —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ä–æ–∑—ã–≥—Ä—ã—à–µ–π')




@dp.callback_query_handler(
    lambda c: c.data != bt_admin_cancel_action.callback_data,
    state=CreatedGivesStates.select_give,
)
async def show_selected_give(
    jam: types.CallbackQuery,
    state: FSMContext,
    give_callback_value: str = False
):
    await CreatedGivesStates.manage_selected_give.set()


    if not give_callback_value:
        give_callback_value = jam.data
    await state.update_data(give_callback_value=give_callback_value)


    give_data = await GiveAway().get_give_data(
        user_id=jam.from_user.id,
        callback_value=give_callback_value
    )

    message_text = ''
    for give in give_data:
        await state.update_data(type_of_give=give['type'])
        message_text = f'<b>–¢–∏–ø —Ä–æ–∑—ã–≥—Ä—ã—à–∞:</b> <code>{"–ü–æ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è–º" if give["type"] == "comments" else "–ü–æ –∫–Ω–æ–ø–∫–µ"}</code>\n<b>–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–æ–∑—ã–≥—Ä—ã—à–∞:</b> <code>{give["name"]}</code>\n\n<b>–¢–µ–∫—Å—Ç:</b>\n{give["text"]}\n\n<b>–§–æ—Ç–æ:</b> <code>{"–ù–µ—Ç" if give["photo_id"] is None else "–î–∞"}</code>\n<b>–í–∏–¥–µ–æ:</b> <code>{"–ù–µ—Ç" if give["video_id"] is None else "–î–∞"}</code>\n<b>–ö–∞–ø—á–∞:</b> <code' \
                       f'>{"–î–∞" if give["captcha"] else "–ù–µ—Ç"}</code>\n<b>–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ ' \
                       f'–ø–æ–±–µ–¥–∏—Ç–µ–ª–µ–π:</b> <code' \
                       f'>{give["winners_count"]}</code>\n<b>–î–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è:</b> <code>{give["over_date"]}</code>'


    await jam.message.edit_text(
        message_text,
        reply_markup=kb_admin_manage_created_gives
    )
